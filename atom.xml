<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://Sinorcos.github.io/</id>
    <title>SinorCos blog</title>
    <updated>2020-08-13T15:57:12.822Z</updated>
    <generator>https://github.com/jpmonette/feed</generator>
    <link rel="alternate" href="https://Sinorcos.github.io/"/>
    <link rel="self" href="https://Sinorcos.github.io/atom.xml"/>
    <subtitle>Hey！欢迎你关注我。 
我会和你聊聊关于我的想法， 教程，体验，有意思的东西，好玩的事情，安利你们的东西。 </subtitle>
    <logo>https://Sinorcos.github.io/images/avatar.png</logo>
    <icon>https://Sinorcos.github.io/favicon.ico</icon>
    <rights>All rights reserved 2020, SinorCos blog</rights>
    <entry>
        <title type="html"><![CDATA[使用`Docker`安装`ghost`博客]]></title>
        <id>https://Sinorcos.github.io/post/shi-yong-dockeran-zhuang-ghostbo-ke/</id>
        <link href="https://Sinorcos.github.io/post/shi-yong-dockeran-zhuang-ghostbo-ke/">
        </link>
        <updated>2020-08-13T13:05:05.000Z</updated>
        <summary type="html"><![CDATA[<p>👐docker安装博客是一个很不错的选择，一键部署、镜像导出都很不错</p>
]]></summary>
        <content type="html"><![CDATA[<p>👐docker安装博客是一个很不错的选择，一键部署、镜像导出都很不错</p>
<!-- more -->
<h2 id="下载ghost镜像">下载<code>ghost</code>镜像</h2>
<pre><code class="language-bash">$ docker pull ghost # 如果没有配置加速器，下载`ghost`镜像就会很慢
$ docker images ls #查看`ghost`镜像
</code></pre>
<h2 id="简单使用docker安装ghost博客">简单使用<code>docker</code>安装<code>Ghost</code>博客</h2>
<p>这将启动侦听默认 Ghost 端口 2368 的 Ghost 实例。</p>
<pre><code class="language-bash">$ docker run -d --name some-ghost ghost
</code></pre>
<p>如果容器是没有ip的情况下，我们是无法访问到<code>docker</code>中的<code>ghost</code>博客。</p>
<p>所以就需要使用<code>端口映射</code>，将容器的端口映射到主机的端口：</p>
<pre><code class="language-bash">$ docker run -d --name some-ghost -e url=http://localhost:3001 -p 3001:2368 ghost
</code></pre>
<p>打开浏览器输入<code>http://localhost:3001/</code>即可以访问``ghost`博客了。</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[简洁安装UG12.0教程（全网最简单）  ]]></title>
        <id>https://Sinorcos.github.io/post/jian-ji-an-zhuang-ug120-jiao-cheng-quan-wang-zui-jian-dan/</id>
        <link href="https://Sinorcos.github.io/post/jian-ji-an-zhuang-ug120-jiao-cheng-quan-wang-zui-jian-dan/">
        </link>
        <updated>2020-08-13T13:03:52.000Z</updated>
        <summary type="html"><![CDATA[<p>🗣UG NX12.0/64位下载地址：<br>
pan.baidu.com/s/1_c1TRnnZUYEt7oha7zu6Cg<br>
密码：dguq<br>
转载声明：下载地址为公众号<code>软件安装管家</code>提供，网盘如果没有会员可以用<code>亿寻工具</code>加速</p>
]]></summary>
        <content type="html"><![CDATA[<p>🗣UG NX12.0/64位下载地址：<br>
pan.baidu.com/s/1_c1TRnnZUYEt7oha7zu6Cg<br>
密码：dguq<br>
转载声明：下载地址为公众号<code>软件安装管家</code>提供，网盘如果没有会员可以用<code>亿寻工具</code>加速</p>
<!-- more -->
<h2 id="文件总览">文件总览</h2>
<p>解压文件夹后，文件大概是这样：</p>
<figure data-type="image" tabindex="1"><img src="https://s1.ax1x.com/2020/06/19/NMNE8A.png" alt="文件总览" loading="lazy"></figure>
<h2 id="一-安装-java90">一、安装 <code>Java9.0</code></h2>
<p>首先安装<code>UG12.0</code>的第一步就是安装<code>Java9.0</code></p>
<blockquote>
<p>似乎说<code>Java</code>是可以保证<code>UG12.0</code>在安装的时候数据不会出现问题。</p>
</blockquote>
<p><code>右键</code>以管理员身份运行<code>Java9.0安装程序</code></p>
<figure data-type="image" tabindex="2"><img src="https://s1.ax1x.com/2020/06/19/NMNnDf.png" alt="java9.0安装程序" loading="lazy"></figure>
<p>下一步</p>
<figure data-type="image" tabindex="3"><img src="https://s1.ax1x.com/2020/06/19/NMNZvt.png" alt="下一步" loading="lazy"></figure>
<blockquote>
<p>这里安装的位置可以自行选择</p>
</blockquote>
<figure data-type="image" tabindex="4"><img src="https://s1.ax1x.com/2020/06/19/NMNmKP.png" alt="安装" loading="lazy"></figure>
<p>下一步</p>
<figure data-type="image" tabindex="5"><img src="https://s1.ax1x.com/2020/06/19/NMNVgI.png" alt="下一步" loading="lazy"></figure>
<p>正在安装</p>
<figure data-type="image" tabindex="6"><img src="https://s1.ax1x.com/2020/06/19/NMNMVS.png" alt="" loading="lazy"></figure>
<p>安装完成</p>
<figure data-type="image" tabindex="7"><img src="https://s1.ax1x.com/2020/06/19/NMNQUg.png" alt="" loading="lazy"></figure>
<h2 id="二-安装nx许可服务器">二、安装<code>NX许可服务器</code></h2>
<blockquote>
<p>老版本的ug安装许可方法是通过破解来获得许可，并不是很方便</p>
<p>这里我们一般用脚本来安装<code>NX许可</code>的服务器，比破解简单的多</p>
</blockquote>
<p>打开破解文件，复制里面的<code>NX6-NX12License_Servers</code>文件夹到磁盘的根目录</p>
<figure data-type="image" tabindex="8"><img src="https://s1.ax1x.com/2020/06/19/NMN3Cj.png" alt="" loading="lazy"></figure>
<figure data-type="image" tabindex="9"><img src="https://s1.ax1x.com/2020/06/19/NMNG2n.png" alt="" loading="lazy"></figure>
<blockquote>
<p>也可以是其他磁盘分区的根目录，这里我就用C盘了</p>
</blockquote>
<p>然后进去<code>以管理员身份</code>运行<code>安装NX许可服务</code></p>
<figure data-type="image" tabindex="10"><img src="https://s1.ax1x.com/2020/06/19/NMNJvq.png" alt="" loading="lazy"></figure>
<p>当出现<code>NX许可服务已经安装完成</code>，就OK了</p>
<h2 id="三-安装nx程序主体">三、安装NX程序主体</h2>
<p>回到安装包，找到<code>Launch</code>程序，也是<code>以管理员身份运行</code></p>
<figure data-type="image" tabindex="11"><img src="https://s1.ax1x.com/2020/06/19/NMNNrV.png" alt="" loading="lazy"></figure>
<figure data-type="image" tabindex="12"><img src="https://s1.ax1x.com/2020/06/19/NMNwaF.png" alt="" loading="lazy"></figure>
<p>选择<code>Install NX</code>，选择中文（简体），确定</p>
<figure data-type="image" tabindex="13"><img src="https://s1.ax1x.com/2020/06/19/NMN054.png" alt="" loading="lazy"></figure>
<p>下一步选择<code>完整安装</code></p>
<figure data-type="image" tabindex="14"><img src="https://s1.ax1x.com/2020/06/19/NMNrG9.png" alt="" loading="lazy"></figure>
<blockquote>
<p>在这里可以自行选择<code>NX主体</code>的安装路径，一般我们只将C盘改成D盘</p>
</blockquote>
<p>这一步比较关键，要把<code>服务器的端口</code>改成<code>27800@主机名</code>，主机名会自动识别，只要改<code>27800</code>即可</p>
<figure data-type="image" tabindex="15"><img src="https://s1.ax1x.com/2020/06/19/NMNcKx.png" alt="" loading="lazy"></figure>
<p>下一步选择<code>简体中文</code>，再下一步</p>
<figure data-type="image" tabindex="16"><img src="https://s1.ax1x.com/2020/06/19/NMNgr6.png" alt="" loading="lazy"></figure>
<blockquote>
<p>现在就开始安装<code>NX程序主体</code></p>
</blockquote>
<p>到这就<code>安装完程序</code>，就剩<code>破解</code>了</p>
<figure data-type="image" tabindex="17"><img src="https://s1.ax1x.com/2020/06/19/NMNWVO.png" alt="" loading="lazy"></figure>
<h2 id="四-替换破解文件">四、替换破解文件</h2>
<p>回到安装包，进到<code>UG12 &gt; 破解文件 &gt; NX 12.0</code></p>
<p>将里面的文件夹全部复制</p>
<figure data-type="image" tabindex="18"><img src="https://s1.ax1x.com/2020/06/19/NMN5PH.png" alt="" loading="lazy"></figure>
<p>来到刚刚选择的安装<code>NX程序主体</code>的路径，粘贴，<code>替换目标中的文件</code></p>
<figure data-type="image" tabindex="19"><img src="https://s1.ax1x.com/2020/06/19/NMNIGd.png" alt="" loading="lazy"></figure>
<p>替换完后，<code>UG12</code>就算安装完成了，我们可以在开始菜单找到</p>
<blockquote>
<p>默认是不在桌面创建快捷方式的</p>
</blockquote>
<figure data-type="image" tabindex="20"><img src="https://s1.ax1x.com/2020/06/19/NMNqqf.png" alt="" loading="lazy"></figure>
<p>如果出现了这个加载界面说明我们的<code>UG12.0</code>就算<code>安装 + 破解</code>成功了</p>
<figure data-type="image" tabindex="21"><img src="https://s1.ax1x.com/2020/06/19/NMNHMt.png" alt="" loading="lazy"></figure>
<figure data-type="image" tabindex="22"><img src="https://s1.ax1x.com/2020/06/19/NMNTxI.png" alt="" loading="lazy"></figure>
<h3 id="开始快乐画图吧">开始快乐画图吧！</h3>
<h2 id="领取ug练习图纸200张">领取UG练习图纸200张</h2>
<blockquote>
<p>加私人微信：<code>SinOrCosOrTan</code>可领取UG练习图纸200张哦~</p>
</blockquote>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[微信好友数据分析]]></title>
        <id>https://Sinorcos.github.io/post/wei-xin-hao-you-shu-ju-fen-xi/</id>
        <link href="https://Sinorcos.github.io/post/wei-xin-hao-you-shu-ju-fen-xi/">
        </link>
        <updated>2020-08-13T13:01:09.000Z</updated>
        <content type="html"><![CDATA[<h2 id="相关库介绍">相关库介绍</h2>
<ul>
<li>文件读取、保存：os</li>
<li>数据持久化：pickle</li>
<li>随机数的生成与使用：random</li>
<li>图像处理：PIL</li>
<li>数据可视化：matplotlib、seaborn</li>
<li>词云、分词：wordcloud、jieba</li>
<li>多线程：threading</li>
<li>正则表达式：re</li>
</ul>
<h3 id="文件的读取与保存">文件的读取与保存</h3>
<pre><code class="language-python">import os
# 列举当前目录的所有文件
files = os.listdir(&quot;./&quot;)
print(files)
# 加载指定文件
## 方法一：
fp = open(files[0],&quot;r&quot;,encoding=&quot;utf-8&quot;)
text = fp.read()		# 读取所有文本
lines = fp.readlines()	# 读取所有行
fp.close()				# 文件一定要记得close！

## 方法二：
with open(files[0],&quot;r&quot;,encoding=&quot;utf-8&quot;) as fp:
    text2 = fp.read()
    lines = fp.readlines()

# 输出文件内容
print(&quot;text与text2是否相同：&quot;,text == text2)
print(&quot;方式一读入：\n&quot;,text1,'\n')
print(&quot;方式二读入：\n&quot;,text2,)

## 文件的保存
with open(&quot;data.txt&quot;,&quot;w&quot;,encoding=&quot;utf-8&quot;) as fp:
    fp.write(&quot;你好，这里是Sin or Cos博客！&quot;)
</code></pre>
<p>运行结果：</p>
<figure data-type="image" tabindex="1"><img src="https://s1.ax1x.com/2020/06/24/NwFRZ8.png" alt="" loading="lazy"></figure>
<blockquote>
<p>推荐使用方法二去操作文件，可以做到代码更加简洁，文件也会自动关闭</p>
</blockquote>
<h3 id="数据持久化">数据持久化</h3>
<pre><code class="language-python">import pickle

d = {
    &quot;name&quot;:&quot;Sin or Cos&quot;,
    &quot;age&quot;:&quot;17&quot;,
    &quot;college&quot;:&quot;ssti&quot;
}
print(type(d))
print(d)

# 保存
## 将数据用dump封装，写到文件中
with open(&quot;data.dict&quot;,&quot;wb&quot;) as fp:
    pickle.dump(d,fp)
   

# 加载
## 使用load拆包得到数据
with open(&quot;data.dict&quot;,&quot;rb&quot;) as fp:
    d2 = pickle.load(fp)

print(&quot;d2==d:&quot;,d2==d)
print(d2)

</code></pre>
<p>运行结果：</p>
<figure data-type="image" tabindex="2"><img src="https://s1.ax1x.com/2020/06/24/NwAVBV.png" alt="" loading="lazy"></figure>
<h3 id="随机数的生成与使用">随机数的生成与使用</h3>
<pre><code class="language-python">import random

for x in range(10):
    r  = random.randint(1,10)
    r2 = random.random()
    r3 = random.uniform(10,20)
    print(f&quot;r:{r}\t r2:{r2}\t r3:{r3}&quot;)
</code></pre>
<p>运行结果：</p>
<figure data-type="image" tabindex="3"><img src="https://s1.ax1x.com/2020/06/24/NwERZ6.png" alt="" loading="lazy"></figure>
<h3 id="图像的处理">图像的处理</h3>
<h4 id="图像的读取与保存">图像的读取与保存</h4>
<pre><code class="language-python">from PIL import Image

img = Image.open(&quot;test.png&quot;)
img.show()
print(img.format,img.size,img.mode)
img.save(&quot;copy.png&quot;)

</code></pre>
<blockquote>
<p>自行在同目录下放置一张图片，重命名为<code>test.png</code>，程序运行后会看到<code>copy.png</code></p>
</blockquote>
<p>运行结果：</p>
<figure data-type="image" tabindex="4"><img src="https://s1.ax1x.com/2020/06/24/NwVv0x.png" alt="" loading="lazy"></figure>
<h4 id="图通道分离与合并">图通道分离与合并</h4>
<pre><code class="language-python">r,g,b = img.split()
print(r.size,r.mode)
# 处理RGB
img = Image.merge(&quot;RGB&quot;,(r,b,b))
img.show()
img.save(&quot;copy.png&quot;)
</code></pre>
<blockquote>
<p>程序运行后即可看到图片的rgb三通道的明显变化</p>
</blockquote>
<p>变化：</p>
<figure data-type="image" tabindex="5"><img src="https://s1.ax1x.com/2020/06/24/NwZj2Q.jpg" alt="" loading="lazy"></figure>
<figure data-type="image" tabindex="6"><img src="https://s1.ax1x.com/2020/06/24/NwZHVP.jpg" alt="" loading="lazy"></figure>
<h4 id="图像区域">图像区域</h4>
<pre><code class="language-python">img2 = img.copy()	# 复制图像
box = (100,100,400,400)
region = img2.crop(box)
region.show()
region.save(&quot;box.jpg&quot;)
</code></pre>
<p>截取结果：</p>
<figure data-type="image" tabindex="7"><img src="https://s1.ax1x.com/2020/06/24/Nwe3GD.jpg" alt="" loading="lazy"></figure>
<h4 id="图像的反转-旋转">图像的反转、旋转</h4>
<pre><code class="language-python">out = img.resize((128,128))
out.show()
out = img.rotate(45)	# 顺时针旋转45°
out.show()
out = img.transpose(Image.FLIP_LEFT_RIGHT)
out.show()
out = img.transpose(Image.FLIP_TOP_BOTTOM)
out.show()
out = img.transpose(Image.ROTATE_90)
out.show()
out = img.transpose(Image.ROTATE_180)
out.show()
out = img.transpose(Image.ROTATE_270)
out.show()
</code></pre>
<p>然后你就可以得到很多图片：</p>
<figure data-type="image" tabindex="8"><img src="https://s1.ax1x.com/2020/06/24/Nwm1wq.png" alt="" loading="lazy"></figure>
<h3 id="数据可视化">数据可视化</h3>
<pre><code class="language-python">import seaborn as sns
import matplotlib.pyplot as plt
import numpy as np
import random

mat = np.random.random((100,100))*255
mat = np.array(mat,dtype=np.uint8)
plt.figure(figsize=(10,10))
# 行 列 图
plt.subplot(1,2,1)
plt.axis('off')
plt.imshow(mat)
plt.subplot(1,2,2)
sns.lineplot([x for x in range(100)],[random.random()*x for x in range(100)])
plt.show()
</code></pre>
<p>运行结果：</p>
<figure data-type="image" tabindex="9"><img src="https://s1.ax1x.com/2020/06/24/NwnGDA.png" alt="" loading="lazy"></figure>
<figure data-type="image" tabindex="10"><img src="https://s1.ax1x.com/2020/06/24/NwnU4f.png" alt="" loading="lazy"></figure>
<h3 id="词云-分词">词云、分词</h3>
<pre><code class="language-python">from wordcloud import WordCloud
import jieba

text = &quot;你好，这里是SinorCos的博客，从这里开始你的Python之路吧！&quot;
words= set(jieba.cut(text))
wc = WordCloud(
	background_color =&quot;white&quot;,
    max_words		 =2000,
    font_path 		 =&quot;C:\\Windows\\Fonts\\Microsoft YaHei UI\\msyh.ttc&quot;,
    height			 =1000,
    width			 =1000,
    max_font_size	 =80,
    random_state	 =50
	)
myword = wc.generate(text)
wc.to_file(&quot;WordCloud.png&quot;)
os.system(&quot;start WordCloud.png&quot;)
</code></pre>
<p>因为我们的词语比较少，所以词云效果很差：</p>
<figure data-type="image" tabindex="11"><img src="https://s1.ax1x.com/2020/06/24/Nw3nLF.png" alt="" loading="lazy"></figure>
<p>但是如果多一些词呢？</p>
<figure data-type="image" tabindex="12"><img src="https://s1.ax1x.com/2020/06/24/NwGIMV.png" alt="" loading="lazy"></figure>
<h3 id="多线程">多线程</h3>
<pre><code class="language-python">import threading
import time
from datetime import datetime as dt
def say_hello(word):
    time.sleep(1)
    print(word)

pool=[]
now=dt.now()
for x in range(10):
    t=threading.Thread(target=say_hello,args=(x,))
    t.start()
    pool.append(t)
for t in pool:
    t.join()
end=dt.now()
print(&quot;总用时：&quot;,(end-now).total_seconds())
</code></pre>
<p>运行结果：</p>
<figure data-type="image" tabindex="13"><img src="https://s1.ax1x.com/2020/06/24/NwwKcd.png" alt="" loading="lazy"></figure>
<h3 id="正则表达式">正则表达式</h3>
<pre><code class="language-python">import re

# 查找所有数字
nums = re.findall(r&quot;\d+&quot;,text)
# 查找所有字母
word = re.findall(r&quot;[a-zA-Z]+&quot;,text)
# 查找所有汉字
chinese_word = re.findall(r&quot;[\u4e00-\u9fa5]+&quot;,text)
</code></pre>
<h2 id="微信数据统计分析">微信数据统计分析</h2>
<h3 id="导入依赖库">导入依赖库</h3>
<pre><code class="language-python">import pickle
import random
import os
from PIL import Image
import math
import seaborn as sns
import matplotlib.pyplot as plt
import pandas as pd
import re
from wordcloud import WordCloud
import itchat
import jieba
import json
from urllib.request import urlopen, quote
import webbrowser as web
%matplotlib inline
%config InlineBackend.figure_format = 'svg'

sns.set(style=&quot;white&quot;,context=&quot;notebook&quot;)
sns.set_style(&quot;whitegrid&quot;,{&quot;font.sans-serif&quot;:['simhei','Arial']})
</code></pre>
<h3 id="登录微信获取数据">登录微信获取数据</h3>
<pre><code class="language-python">itchat.auto_login()
</code></pre>
<h3 id="保存数据">保存数据</h3>
<pre><code class="language-python">friends=itchat.get_friends(update=True)
with open(&quot;friends.data&quot;,&quot;wb&quot;) as fp:
    pickle.dump(friends,fp)
</code></pre>
<h3 id="加载数据">加载数据</h3>
<pre><code class="language-python">with open(&quot;friends.data&quot;,&quot;rb&quot;) as fp:
    friends=pickle.load(fp)
    
print(&quot;Total {} friends.&quot;,format(len(friends)))
</code></pre>
<h3 id="城市数据">城市数据</h3>
<pre><code class="language-python">pro_city={}
for friend in friends:
    province=friend['Province']
    city=friend['City']
    pc=province+city
    pro_city[pc] = pro_city.get(pc,0) + 1
#    if pc in pro_city:
#        pro_city[pc] += 1
#    else:
#        pro_city[pc] = 1
print(pro_city)
</code></pre>
<h3 id="下载头像">下载头像</h3>
<pre><code class="language-python">def download_icon(user_name,icon_name):
    img = itchat.get_head_img(userName=user_name)
    with open(icon_name,&quot;wb&quot;) as fp:
        fp.write(img)
        
if not os.path.isdir(&quot;img&quot;):
    os.mkkir(&quot;img&quot;)
t_pool=[]
print(&quot;Using multiple threads to download images...&quot;)
for index,friend in enumerate(friends):
    t=threading.Thread(target=download_icon,args=(friend[&quot;UserName&quot;],&quot;img/{:0&gt;3d}.jpg&quot;.format(index+1)))
    t.start()
    t_pool.append()

for index,t in enumerate(t_pool):
    print(&quot;\rProcessing:[&quot;+&quot;=&quot;*(index//10)+&quot;&gt;]&quot;+&quot;{:.2f}%&quot;.format((index+1)/len(friends)*100),end=&quot;&quot;,flush=True)
	t.join()
print(&quot;\nDownload images done.&quot;)
</code></pre>
<h3 id="拼接头像">拼接头像</h3>
<pre><code class="language-python">  def createImg():
    x = 0
    y = 0
    size=3000
    img_dir=os.path.abspath(&quot;img&quot;)
    imgs = [os.path.join(img_dir,img) for img in os.listdir(img_dir)]
    random.shuffle(imgs)
    new_img = Image.new(&quot;RGBA&quot;,(size,size))
    width = int(math.sqrt(size * size / len(imgs)))
    num_line = int(size / width)
    for index,img_path in enumerate(imgs):
        print(&quot;\rHandling:[&quot;+&quot;=&quot;*(index//10)+&quot;&gt;]&quot;+&quot;{:.2f}%&quot;.format((index+1)/len(imgs)*100),end=&quot;&quot;,flush=True)
        try:
            img = Image.open(img_path)
        except:
            continue
        img = img.resize((width,width),Image.ANTIALIAS)
        new_img.paste(img,(x*width,y*width))
        x += 1
        if x&gt;=num_line:
            x = 0
            y += 1
    new_img.save(&quot;all.png&quot;)
    return new_img
im=createImg()
im.show()
</code></pre>
<h3 id="性别计算">性别计算</h3>
<pre><code class="language-python">def getSex():
    sex = dict()
    for f in friends:
        if f[&quot;Sex&quot;] == 1:
            sex[&quot;men&quot;] = sex.get(&quot;men&quot;,0) + 1
        elif f[&quot;Sex&quot;] == 2:
            sex[&quot;women&quot;] = sex.get(&quot;women&quot;,0) + 1
        else:
            sex[&quot;unknown&quot;] = sex.get(&quot;unknown&quot;,0) + 1
            
    return sex
sex=getSex()
# pandas:表格数据的，数组数据处理
# pandas：DataFrame:二维数组
# pandas：Series:一维数组
df=pd.DataFrame.from_dict(sex,orient=&quot;index&quot;,columns=[&quot;num&quot;])
df.describe()	# 简单的数据分析
num=df[&quot;num&quot;].values
text=df.index.tolist()
labels=list(map(lambda x: str(x[1])+&quot;[&quot;+str(x[0])+&quot;]&quot;,zip(num,text)))
plt.figure(figsize=(6,6))
plt.pie(df[&quot;num&quot;],labels=labels,autopct=&quot;%3.2f%%&quot;)
plt.show()
</code></pre>
<figure data-type="image" tabindex="14"><img src="https://s1.ax1x.com/2020/06/25/N0rNA1.png" alt="" loading="lazy"></figure>
<h3 id="好友标签词云展示">好友标签词云展示</h3>
<pre><code class="language-python">def getSignatue():
    with open(&quot;sign.txt&quot;,&quot;a&quot;,encoding=&quot;utf-8&quot;) as file:
        for f in friends:
            signature = f[&quot;Signature&quot;].strip().replace(&quot;emoji&quot;,&quot;&quot;).replace(&quot;span&quot;,&quot;&quot;).replace(&quot;class&quot;,&quot;&quot;)
            signature = re.sub(r&quot;lf\d+\w*|[&lt;&gt;/=]&quot;,&quot;&quot;,signature)
            file.write(signature + &quot;\n&quot;)

def create_word_cloud(filename):
    with open(&quot;{}.txt&quot;.format(filename),encoding=&quot;utf-8&quot;) as fp:
        text = fp.read()
    
    text = re.sub(r&quot;(\n)+&quot;,&quot;\n&quot;,&quot;\n&quot;.join(jieba.cut(text)))
    
    wc = WordCloud(
        background_color=&quot;white&quot;,
        max_words=2000,
        font_path=&quot;‪C:\\Windows\\Fonts\\msyh.ttc&quot;,
        height=1000,
        width=1000,
        max_font_size=80,
        random_state=50,
    )
    myword = wc.generate(text)
    wc.to_file(&quot;WordCloud.png&quot;)
    os.system(&quot;start WordCloud.png&quot;)
    
getSignatue()
create_word_cloud(&quot;sign&quot;)
</code></pre>
<h3 id="好友地域分布热力图">好友地域分布热力图</h3>
<pre><code class="language-python">def html_code():
    head='''&lt;!DOCTYPE html&gt;
&lt;html&gt;
&lt;head&gt;
    &lt;meta http-equiv=&quot;Content-Type&quot; content=&quot;text/html; charset=utf-8&quot; /&gt;
    &lt;meta name=&quot;viewport&quot; content=&quot;initial-scale=1.0, user-scalable=no&quot; /&gt;
    &lt;script type=&quot;text/javascript&quot; src=&quot;https://api.map.baidu.com/api?v=2.0&amp;ak=3Q7Sg3YixVsGb9ytehNj03NwcfMIi8iG&quot;&gt;&lt;/script&gt;
    &lt;script type=&quot;text/javascript&quot; src=&quot;httpsL//api.map.baidu.com/library/Heatmap/2.0/src/Heatmap_min.js&quot;&gt;&lt;/script&gt;
    &lt;title&gt;热力图功能示例&lt;/title&gt;
    &lt;style type=&quot;text/css&quot;&gt;
        ul,li{list-style: none;margin:0;padding:0;float:left;}
        html{height:100%}
        body{height:100%;margin:0px;padding:0px;font-family:&quot;微软雅黑&quot;;}
        #container{height:500px;width:100%;}
        #r-result{width:100%;}
    &lt;/style&gt;
&lt;/head&gt;
&lt;body&gt;
    &lt;script&gt;
function LoadBaiduMapScript() {
    //console.log(&quot;初始化百度地图脚本...&quot;);
    const AK = &quot;3Q7Sg3YixVsGb9ytehNj03NwcfMIi8iG&quot;;
    const BMap_URL = &quot;https://api.map.baidu.com/api?v=2.0&amp;ak=&quot;+ AK +&quot;&amp;s=1&amp;callback=onBMapCallback&quot;;
    return new Promise((resolve, reject) =&gt; {
        // 如果已加载直接返回
        if(typeof BMap !== &quot;undefined&quot;) {
            resolve(BMap);
            return true;
        }
        // 百度地图异步加载回调处理
        window.onBMapCallback = function () {
            console.log(&quot;百度地图脚本初始化成功...&quot;);
            resolve(BMap);
        };
        // 插入script脚本
        let scriptNode = document.createElement(&quot;script&quot;);
        scriptNode.setAttribute(&quot;type&quot;, &quot;text/javascript&quot;);
        scriptNode.setAttribute(&quot;src&quot;, BMap_URL);
        document.body.appendChild(scriptNode);
    });
}
LoadBaiduMapScript()
    &lt;/script&gt;
    &lt;div id=&quot;container&quot;&gt;&lt;/div&gt;
    &lt;div id=&quot;r-result&quot;&gt;
    &lt;input type=&quot;button&quot;  onclick=&quot;openHeatmap();&quot; value=&quot;显示热力图&quot;/&gt;&lt;input type=&quot;button&quot;  onclick=&quot;closeHeatmap();&quot; value=&quot;关闭热力图&quot;/&gt;
    &lt;/div&gt;
&lt;/body&gt;
&lt;/html&gt;
&lt;script type=&quot;text/javascript&quot;&gt;
    var map = new BMap.Map(&quot;container&quot;,{enableMapClick:true});          // 创建地图实例

    var point = new BMap.Point(116.418261, 39.921984);
    map.centerAndZoom(point, 15);             // 初始化地图，设置中心点坐标和地图级别
    map.enableScrollWheelZoom(); // 允许滚轮缩放
  
    var points =['''
    rear='''];
   
    if(!isSupportCanvas()){
        alert('热力图目前只支持有canvas支持的浏览器,您所使用的浏览器不能使用热力图功能~')
    }
    //详细的参数,可以查看heatmap.js的文档 https://github.com/pa7/heatmap.js/blob/master/README.md
    //参数说明如下:
    /* visible 热力图是否显示,默认为true
     * opacity 热力的透明度,1-100
     * radius 势力图的每个点的半径大小   
     * gradient  {JSON} 热力图的渐变区间 . gradient如下所示
     * {
            .2:'rgb(0, 255, 255)',
            .5:'rgb(0, 110, 255)',
            .8:'rgb(100, 0, 255)'
        }
        其中 key 表示插值的位置, 0~1. 
        value 为颜色值. 
     */
    heatmapOverlay = new BMapLib.HeatmapOverlay({&quot;radius&quot;:20});
    map.addOverlay(heatmapOverlay);
    heatmapOverlay.setDataSet({data:points,max:100});
    //是否显示热力图
    function openHeatmap(){
        heatmapOverlay.show();
    }
    function closeHeatmap(){
        heatmapOverlay.hide();
    }
    closeHeatmap();
    function setGradient(){
         /*格式如下所示:
        {
             0:'rgb(102, 255, 0)',
             .5:'rgb(255, 170, 0)',
              1:'rgb(255, 0, 0)'
        }*/
         var gradient = {};
         var colors = document.querySelectorAll(&quot;input[type='color']&quot;);
         colors = [].slice.call(colors,0);
         colors.forEach(function(ele){
            gradient[ele.getAttribute(&quot;data-key&quot;)] = ele.value; 
         });
        heatmapOverlay.setOptions({&quot;gradient&quot;:gradient});
    }
    //判断浏览区是否支持canvas
    function isSupportCanvas(){
        var elem = document.createElement('canvas');
        return !!(elem.getContext &amp;&amp; elem.getContext('2d'));
    }
&lt;/script&gt;'''
    return head,rear

def view_map(pro_city):
    json_data=''
    for city,value in pro_city.items():
        try:
            pos=GetLngLat(city)
        except ConnectionError:
            pos = None
        if pos is not None and pos['status'] == 0:
            lng = pos['result']['location']['lng']
            lat = pos['result']['location']['lat']
            json_temp = '{&quot;lng&quot;:'+str(lng)+',&quot;lat&quot;:'+str(lat)+',&quot;cout&quot;:'+str(value)+'},'
            json_data = '\n' + json_temp
    try:
        head,rear = html_code()
        html_file = head+json_data+rear
        with open('heatmap.html','w',encoding=&quot;utf-8&quot;) as f:
            f.write(html_file)
            web.open('heatmap.html',new=0,autoraise=True)
    except AttributeError:
        return AttributeError
view_map(pro_city)
</code></pre>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[基于ESP8266的WeMos D1 Webserver]]></title>
        <id>https://Sinorcos.github.io/post/ji-yu-esp8266-de-wemos-d1-webserver/</id>
        <link href="https://Sinorcos.github.io/post/ji-yu-esp8266-de-wemos-d1-webserver/">
        </link>
        <updated>2020-08-13T12:52:25.000Z</updated>
        <content type="html"><![CDATA[<h2 id="配网">配网</h2>
<pre><code class="language-c">#include&lt;ESP8266WiFi.h&gt;
// 导入ESP8266WIFI模块的库

#define WIFI_SSID &quot;360WiFi-518CFF&quot;
#define WIFI_PASSWD &quot;********&quot;
// 设定好wifi的名称与密码

void setup(){
  Serial.begin(115200);
  // 串口监视波特率设置
  WiFi.mode(WIFI_STA);				// 模式设定 WIFI_STA - 客户机 | WIFI_AP - 路由模式
  WiFi.begin(WIFI_SSID,WIFI_PASSWD);// 将WiFi名称和密码输入
  
  WiFi.setAutoConnect(true);		// 自动连接WiFi
  WiFi.setAutoReconnect(true);		// 自动重连WiFi
  while(WiFi.status()!=WL_CONNECTED){
    // WiFi.status() 获取连接状态 WL_CONNECTED 是一个定义好了的常量 - 已连接
    delay(1000); // 延时
    Serial.println(&quot;WIFI NOT CONNECT&quot;); // 类似于console.log
    }
    Serial.println(&quot;CONNECTED TO AP&quot;);
  }

  void loop(){
    //loop code
  }
</code></pre>
<p>结果如下：</p>
<figure data-type="image" tabindex="1"><img src="https://s1.ax1x.com/2020/07/12/U8o48H.png" alt="串口监视器" loading="lazy"></figure>
<figure data-type="image" tabindex="2"><img src="https://s1.ax1x.com/2020/07/12/U8o52d.png" alt="路由器管理界面" loading="lazy"></figure>
<h2 id="wifi扫描网络">WIFI扫描网络</h2>
<pre><code class="language-c">#include&lt;ESP8266WiFi.h&gt;

void setup(){
  Serial.begin(115200);
  WiFi.mode(WIFI_STA);  // 客户端模式
  WiFi.disconnect();	// 断开连接
  delay(100);
  }

  void loop(){
    int n = WiFi.scanNetworks();	// 扫描网络 | 会返回周围WiFi的数量
    if(n == 0){
        Serial.println(&quot;NETWORKS ON FOUND&quot;);	// 扫描不到就提示 0
      } else{
          Serial.print(n);
          Serial.println(&quot; NETWORKS FOUND&quot;);
          Serial.println(&quot;-----------------------&quot;);
          for(int i = 0 ; i &lt; n ; i++){
              Serial.println(WiFi.SSID(i));		// SSID函数包含扫描的WiFi名称，下标传参
            }
          Serial.println(&quot;-----------------------&quot;);
        }
  }
</code></pre>
<p>结果如下：</p>
<figure data-type="image" tabindex="3"><img src="https://s1.ax1x.com/2020/07/12/U8bfeI.png" alt="" loading="lazy"></figure>
<h2 id="那么再深入一点">那么再深入一点</h2>
<pre><code class="language-c">#include &lt;ESP8266WiFi.h&gt;
#include &lt;ESP8266WebServer.h&gt;
#include&lt;Servo.h&gt;
Servo servo;

//网页
String myhtmlPage =
    String(&quot;&quot;) +
    &quot;&lt;html&gt;&quot; +
    &quot;&lt;head&gt;&quot; +
    &quot;    &lt;title&gt;ESP8266 Web Server Test&lt;/title&gt;&quot; +
    &quot;    &lt;script defer=\&quot;defer\&quot;&gt;&quot; +
    &quot;        function ledSwitch() {&quot; +
    &quot;            var xmlhttp;&quot; +
    &quot;            if (window.XMLHttpRequest) {&quot; +
    &quot;                xmlhttp = new XMLHttpRequest();&quot; +
    &quot;            } else {&quot; +
    &quot;                xmlhttp = new ActiveXObject(\&quot;Microsoft.XMLHTTP\&quot;);&quot; +
    &quot;            }&quot; +
    &quot;            xmlhttp.onreadystatechange = function () {&quot; +
    &quot;                if (xmlhttp.readyState == 4 &amp;&amp; xmlhttp.status == 200) {&quot; +
    &quot;                    document.getElementById(\&quot;txtState\&quot;).innerHTML = xmlhttp.responseText;&quot; +
    &quot;                }&quot; +
    &quot;            },&quot; +
    &quot;            xmlhttp.open(\&quot;GET\&quot;, \&quot;Switch\&quot;, true);&quot; +
    &quot;            xmlhttp.send(); &quot; +
    &quot;        }&quot; +
    &quot;    &lt;/script&gt;&quot; +
    &quot;&lt;/head&gt;&quot; +
    &quot;&lt;style&gt;&quot; +
    &quot;body { &quot; +
    &quot;    display: flex; &quot; +
    &quot;    flex-direction: column; &quot; +
    &quot;    align-items: center; &quot; +
    &quot;} &quot; +
    &quot;#txtState{ &quot; +
    &quot;    margin-bottom: 10px; &quot; +
    &quot;    font-size: 20px; &quot; +
    &quot;} &quot; +
    &quot;.login-button { &quot; +
    &quot;  width: 270px;  &quot; +
    &quot; height: 40px;  &quot; +
    &quot; border-width: 0px;  &quot; +
    &quot; border-radius: 3px;  &quot; +
    &quot; background: #1E90FF;  &quot; +
    &quot; cursor: pointer; &quot; +
    &quot; outline: none;  &quot; +
    &quot; font-family: Microsoft YaHei;  &quot; +
    &quot; color: white; &quot; +
    &quot; font-size: 17px;  &quot; +
    &quot;text-align:center;&quot; +
    &quot;} &quot; +
    &quot;.login-button:hover { &quot; +
    &quot; background: #5599FF; &quot; +
    &quot;} &quot; +
    &quot;&lt;/style&gt;&quot; +
    &quot;&lt;body&gt;&quot; +
    &quot;    &lt;div id=\&quot;txtState\&quot;&gt;Unkwon&lt;/div&gt;&quot; +
    &quot;    &lt;input class=\&quot;login-button a\“ type=\&quot;button\&quot; value=\&quot;Switch\&quot; onclick=\&quot;ledSwitch()\&quot;&gt;&quot; +
    &quot;&lt;/body&gt;&quot; +
    &quot;&lt;/html&gt;&quot;;

bool isLedTurnOpen = false; // 记录LED状态

const char* ssid = &quot;360WiFi-518CFF&quot;;
const char* password = &quot;haimin4588&quot;;

ESP8266WebServer server(80);

void handleRoot() {
  server.send(200, &quot;text/html&quot;, myhtmlPage); //！！！注意返回网页需要用&quot;text/html&quot; ！！！
  Serial.println(&quot;用户访问了主页&quot;);
}

void handleSwitch() {
  if (isLedTurnOpen == false) {
    digitalWrite(2, LOW); // 点亮LED
    server.send(200, &quot;text/plain&quot;, &quot;Servo has been turn on&quot;);
    Serial.println(&quot;用户开启了快递箱，舵机释放&quot;);
    isLedTurnOpen = true;
  }
  else {
    digitalWrite(2, HIGH); // 熄灭LED
    server.send(200, &quot;text/plain&quot;, &quot;Servo has been turn off&quot;);
    Serial.println(&quot;用户关闭了快递箱，舵机关闭&quot;);
    isLedTurnOpen = false;
  }                      
}

void handleNotFound() {
  server.send(404, &quot;text/plain&quot;, &quot;嘤嘤嘤！你访问的页面被外星人劫持了哦&quot;);
  Serial.println(&quot;用户访问了一个不存在的页面&quot;);
}
void setup(void) {
  servo.attach(D2); //D4
  servo.write(0);
  //初始化LED
  pinMode(LED_BUILTIN, OUTPUT);
  digitalWrite(LED_BUILTIN, HIGH);

  //初始化串口
  Serial.begin(115200);
  Serial.println(&quot;&quot;);

  //初始化网络
  WiFi.mode(WIFI_STA);
  WiFi.begin(ssid, password);
  while (WiFi.status() != WL_CONNECTED) {
    delay(500);
    Serial.print(&quot;.&quot;);
  }
  Serial.println(&quot;&quot;);
  Serial.print(&quot;IP Address: &quot;);
  Serial.println(WiFi.localIP());

  //初始化WebServer
  server.on(&quot;/&quot;, handleRoot);
  server.on(&quot;/Switch&quot;, handleSwitch);
  server.onNotFound(handleNotFound);
  server.begin();
  Serial.println(&quot;HTTP server started&quot;);
}

void loop(void) {
  //监听客户请求并处理
  server.handleClient();
  if(isLedTurnOpen){
      digitalWrite(LED_BUILTIN,LOW);
      servo.write(90);
      delay(50);
    } else {
      digitalWrite(LED_BUILTIN,HIGH);
      servo.write(0);
      delay(50);
      }
}
</code></pre>
<p>其中比较核心的内容就是HTML和监听处理</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[Hello Sinorcos]]></title>
        <id>https://Sinorcos.github.io/post/hello-gridea/</id>
        <link href="https://Sinorcos.github.io/post/hello-gridea/">
        </link>
        <updated>2018-12-11T16:00:00.000Z</updated>
        <summary type="html"><![CDATA[<p>👏  欢迎来到 <strong>SinorCos blog</strong> ！<br>
✍️  <strong>SinorCos</strong> 一个静态博客。这里记录着博主的生活、心情、知识、笔记、创意... ...</p>
]]></summary>
        <content type="html"><![CDATA[<p>👏  欢迎来到 <strong>SinorCos blog</strong> ！<br>
✍️  <strong>SinorCos</strong> 一个静态博客。这里记录着博主的生活、心情、知识、笔记、创意... ...</p>
<!-- more -->
<p><a href="https://github.com/quangirl">Github</a><br>
<a href="https://space.bilibili.com/241411540">bilibili</a><br>
<a href="https://quangirl.github.io/">个人网站</a></p>
<h2 id="官方介绍">官方介绍👇</h2>
<p>📝  你可以使用最酷的 <strong>Markdown</strong> 语法，进行快速创作</p>
<p>🌉  你可以给文章配上精美的封面图和在文章任意位置插入图片</p>
<p>🏷️  你可以对文章进行标签分组</p>
<p>📋  你可以自定义菜单，甚至可以创建外部链接菜单</p>
<p>💻  你可以在 <strong>Windows</strong>，<strong>MacOS</strong> 或 <strong>Linux</strong> 设备上使用此客户端</p>
<p>🌎  你可以使用 <strong>𝖦𝗂𝗍𝗁𝗎𝖻 𝖯𝖺𝗀𝖾𝗌</strong> 或 <strong>Coding Pages</strong> 向世界展示，未来将支持更多平台</p>
<p>💬  你可以进行简单的配置，接入 <a href="https://github.com/gitalk/gitalk">Gitalk</a> 或 <a href="https://github.com/SukkaW/DisqusJS">DisqusJS</a> 评论系统</p>
<p>🇬🇧  你可以使用<strong>中文简体</strong>或<strong>英语</strong></p>
<p>🌁  你可以任意使用应用内默认主题或任意第三方主题，强大的主题自定义能力</p>
<p>🖥  你可以自定义源文件夹，利用 OneDrive、百度网盘、iCloud、Dropbox 等进行多设备同步</p>
<p>🌱 当然 <strong>Gridea</strong> 还很年轻，有很多不足，但请相信，它会不停向前 🏃</p>
<p>未来，它一定会成为你离不开的伙伴</p>
<p>尽情发挥你的才华吧！</p>
<p>😘 Enjoy~</p>
]]></content>
    </entry>
</feed>